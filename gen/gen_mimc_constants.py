from sha3 import keccak_256
from pathlib import Path
from string import Template
import json

OUTPUT_DIR_RELATIVE = "../pact/contracts"
OUTPUT_FILE = "mimc-constants.pact"

SEED = "mimcsponge"
FIELD_MODULUS = 21888242871839275222246405745257275088548364400416034343698204186575808495617

TEMPLATE = """(module mimc-constants-v1 GOV
  "Constants for the MiMC Hash algortihm"
  ; Module generated by $script
  ; Field Modulus = $modulus
  ; Seed = "$seed"

  (defcap GOV () true)

  (defconst MIMC-CONST:[integer] $cst )
)
"""

def gen_constants():
    yield 0
    x = keccak_256(bytes(SEED, "ascii")).digest()

    for _ in range(218):
        x = keccak_256(x).digest()
        yield int.from_bytes(x, "big") % FIELD_MODULUS
    yield 0


script = Path(__file__)
current_dir = script.resolve().parent
outfile = current_dir.joinpath(OUTPUT_DIR_RELATIVE, OUTPUT_FILE).resolve()

csts = list(gen_constants())

# Gen JSON and add nice indentation
csts_str = "".join("\n   " + x for x in json.dumps(csts, indent=2).splitlines())


tmpl = Template(TEMPLATE)
output = tmpl.substitute(script=script.name, modulus=str(FIELD_MODULUS), seed=SEED, cst=csts_str)

with open(outfile, "w") as fd:
    fd.write(output)

print("{} written".format(outfile))
